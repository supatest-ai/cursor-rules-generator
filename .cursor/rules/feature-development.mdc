---
description: Feature development guidelines and best practices
globs: 
alwaysApply: false
---
# Feature Development Guidelines

## Planning Phase
- Break down features into small, testable units
- Define clear acceptance criteria
- Consider edge cases and error scenarios
- Plan for backwards compatibility

## Implementation
- Follow TDD when possible
- Write self-documenting code
- Implement proper error handling
- Add logging for debugging

## Testing
- Write unit tests for business logic
- Add integration tests for critical paths
- Test edge cases and error conditions
- Update existing tests when needed

## Code Examples:

```typescript
// Good: Feature implementation with proper structure
class UserService {
  async createUser(userData: CreateUserRequest): Promise<User> {
    // Validate input
    const validatedData = await this.validateUserData(userData);
    
    // Check for existing user
    const existingUser = await this.findByEmail(validatedData.email);
    if (existingUser) {
      throw new ConflictError('User already exists');
    }
    
    // Create user
    const user = await this.userRepository.create(validatedData);
    
    // Send welcome email
    await this.emailService.sendWelcomeEmail(user);
    
    return user;
  }
}
```