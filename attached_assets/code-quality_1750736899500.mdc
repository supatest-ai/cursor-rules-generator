---
description: Code quality guidelines
globs: 
alwaysApply: false
---
# Code Quality Standards

## TypeScript Usage
- Use strict TypeScript mode
- Avoid using `any` type
- Define proper interfaces and types for all data structures
- Use proper type imports/exports

## Code Style
- Follow ESLint rules defined in [.eslintrc.js](mdc:.eslintrc.js)
- Follow Prettier formatting defined in [.prettierrc](mdc:.prettierrc)
- Use consistent naming conventions:
  - PascalCase for components and types
  - camelCase for variables and functions
  - UPPER_CASE for constants

## Best Practices
1. Write self-documenting code with clear variable and function names
2. Keep functions small and focused on a single responsibility
3. Use proper error handling with try/catch blocks
4. Add appropriate comments for complex logic
5. Follow component composition patterns in React
6. Use proper dependency injection and avoid tight coupling
7. Write unit tests for critical functionality

## Code Organization
1. Group related functionality together
2. Use proper file and folder structure
3. Keep components modular and reusable
4. Use proper imports with absolute paths
5. Maintain clean separation of concerns

## Performance Considerations
1. Optimize bundle size
2. Use proper React hooks and memoization
3. Implement proper loading states
4. Handle error boundaries
5. Follow performance best practices for your framework
